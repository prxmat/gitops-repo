name: Interactive Environment Bot

on:
  pull_request:
    types: [opened, synchronize, reopened]
  pull_request_review_comment:
    types: [created]
  issue_comment:
    types: [created]

# Ajout des permissions n√©cessaires
permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  handle-command:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Process Command
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const command = context.payload.comment?.body?.trim() || '';

            // Ignore bot's own comments
            if (context.payload.comment?.user?.type === 'Bot') return;

            // Get the latest bot comment to determine the current state
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              per_page: 100
            });

            const botComments = comments.data
              .filter(c => c.user.type === 'Bot')
              .sort((a, b) => new Date(b.created_at) - new Date(a.created_at));

            const lastBotComment = botComments[0];
            const isNewConversation = !lastBotComment || !lastBotComment.body.includes('Current Step:');

            // Handle /create-env command
            if (command === '/create-env') {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: `## üöÄ Environment Setup Bot

                Hi @${context.actor}! I'll help you set up your environment.

                Current Step: 1/3 - Services Selection

                ### Which services do you need?
                <form>
                  <div>
                    <input type="checkbox" id="nestjs-api" name="service" value="nestjs-api">
                    <label for="nestjs-api">NestJS API</label>
                  </div>
                  <div>
                    <input type="checkbox" id="vue-frontend" name="service" value="vue-frontend">
                    <label for="vue-frontend">Vue.js Frontend</label>
                  </div>
                  <div>
                    <input type="checkbox" id="prestashop" name="service" value="prestashop">
                    <label for="prestashop">PrestaShop</label>
                  </div>
                  <div>
                    <input type="checkbox" id="mysql" name="service" value="mysql">
                    <label for="mysql">MySQL</label>
                  </div>
                  <div>
                    <input type="checkbox" id="redis" name="service" value="redis">
                    <label for="redis">Redis</label>
                  </div>
                  <button type="submit">Next</button>
                </form>`
              });
            }

            // Handle /help command
            else if (command === '/help') {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: `## ü§ñ Environment Bot Help

                Available commands:
                - \`/create-env\`: Start the environment creation wizard
                - \`/help\`: Show this help message

                During environment creation:
                - Use the interactive buttons to make your selections
                - Click "Next" to proceed to the next step
                - Click "Back" to go to the previous step
                - Click "Cancel" to cancel the creation`
              });
            }

            // Handle conversation flow
            else if (lastBotComment && lastBotComment.body.includes('Current Step:')) {
              const currentStep = parseInt(lastBotComment.body.match(/Current Step: (\d+)/)[1]);
              const totalSteps = parseInt(lastBotComment.body.match(/(\d+)\/3/)[1]);
              
              if (command.toLowerCase() === 'next') {
                if (currentStep === 1) {
                  // Get selected services
                  const selectedServices = ['nestjs-api', 'vue-frontend', 'prestashop', 'mysql', 'redis']
                    .filter(service => lastBotComment.body.includes(`- [x] ${service}`));
                  
                  if (selectedServices.length === 0) {
                    await github.rest.issues.createComment({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      issue_number: context.issue.number,
                      body: `‚ùå Please select at least one service before proceeding.`
                    });
                    return;
                  }
                  
                  // Store selected services in a new comment
                  await github.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: context.issue.number,
                    body: `Selected services: ${selectedServices.join(', ')}`
                  });
                  
                  // Ask for TTL
                  await github.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: context.issue.number,
                    body: `## üöÄ Environment Setup Bot

                    Current Step: 2/3 - Duration Selection

                    ### How long should this environment exist?
                    <form>
                      <div>
                        <input type="radio" id="1h" name="ttl" value="1h">
                        <label for="1h">1 hour (1h)</label>
                      </div>
                      <div>
                        <input type="radio" id="24h" name="ttl" value="24h">
                        <label for="24h">24 hours (24h)</label>
                      </div>
                      <div>
                        <input type="radio" id="7d" name="ttl" value="7d">
                        <label for="7d">7 days (7d)</label>
                      </div>
                      <div>
                        <input type="radio" id="30d" name="ttl" value="30d">
                        <label for="30d">30 days (30d)</label>
                      </div>
                      <button type="submit">Next</button>
                      <button type="button" onclick="history.back()">Back</button>
                    </form>`
                  });
                }
                else if (currentStep === 2) {
                  // Get selected TTL
                  const ttlMatch = lastBotComment.body.match(/\[x\] .* \((.*?)\)/);
                  if (!ttlMatch) {
                    await github.rest.issues.createComment({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      issue_number: context.issue.number,
                      body: `‚ùå Please select a duration before proceeding.`
                    });
                    return;
                  }
                  
                  const ttl = ttlMatch[1];
                  
                  // Store selected TTL
                  await github.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: context.issue.number,
                    body: `Selected duration: ${ttl}`
                  });
                  
                  // Ask for resource limits
                  await github.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: context.issue.number,
                    body: `## üöÄ Environment Setup Bot

                    Current Step: 3/3 - Resource Limits

                    ### Would you like to customize resource limits?
                    <form>
                      <div>
                        <input type="radio" id="yes" name="customize" value="yes">
                        <label for="yes">Yes, customize limits</label>
                      </div>
                      <div>
                        <input type="radio" id="no" name="customize" value="no">
                        <label for="no">No, use defaults</label>
                      </div>
                      <button type="submit">Next</button>
                      <button type="button" onclick="history.back()">Back</button>
                      <button type="button" onclick="cancel()">Cancel</button>
                    </form>`
                  });
                }
                else if (currentStep === 3) {
                  // Get selected services and TTL from previous comments
                  const servicesComment = botComments.find(c => c.body.startsWith('Selected services:'));
                  const ttlComment = botComments.find(c => c.body.startsWith('Selected duration:'));
                  
                  const selectedServices = servicesComment.body.replace('Selected services: ', '').split(', ');
                  const ttl = ttlComment.body.replace('Selected duration: ', '');
                  
                  const envName = `env-${context.actor}-${context.issue.number}`;
                  
                  const application = {
                    apiVersion: 'argoproj.io/v1alpha1',
                    kind: 'Application',
                    metadata: {
                      name: envName,
                      namespace: 'argocd',
                      annotations: {
                        'argocd.argoproj.io/ttl': ttl
                      }
                    },
                    spec: {
                      project: 'default',
                      source: {
                        repoURL: `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}`,
                        targetRevision: context.payload.pull_request.head.ref,
                        path: 'gitops/charts/unified-app'
                      },
                      destination: {
                        server: 'https://kubernetes.default.svc',
                        namespace: envName
                      },
                      syncPolicy: {
                        automated: {
                          prune: true,
                          selfHeal: true
                        },
                        syncOptions: ['CreateNamespace=true']
                      },
                      helm: {
                        values: `
                          global:
                            environment: ${envName}
                            ttl:
                              enabled: true
                              duration: "${ttl}"
                          ${['nestjs-api', 'vue-frontend', 'prestashop', 'mysql', 'redis'].map(service => `
                          ${service}:
                            enabled: ${selectedServices.includes(service)}
                          `).join('\n')}
                        `
                      }
                    }
                  };
                  
                  const fs = require('fs');
                  fs.writeFileSync(
                    `argocd-app-${envName}.yaml`,
                    JSON.stringify(application, null, 2)
                  );
                  
                  await github.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: context.issue.number,
                    body: `## ‚úÖ Environment Configuration Generated!
                    
                    Your environment configuration has been generated. To apply it locally:

                    1. Download the generated file: \`argocd-app-${envName}.yaml\`
                    2. Apply it to your local cluster:
                       \`\`\`bash
                       kubectl apply -f argocd-app-${envName}.yaml
                       \`\`\`
                    
                    **Configuration Details:**
                    - **Environment Name:** \`${envName}\`
                    - **TTL:** \`${ttl}\`
                    - **Services:** \`${selectedServices.join(', ')}\`
                    
                    The environment will be automatically deleted after the specified TTL.`
                  });
                }
              }
              else if (command.toLowerCase() === 'back' && currentStep > 1) {
                // Go back to previous step
                if (currentStep === 2) {
                  await github.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: context.issue.number,
                    body: `## üöÄ Environment Setup Bot

                    Current Step: 1/3 - Services Selection

                    ### Which services do you need?
                    <form>
                      <div>
                        <input type="checkbox" id="nestjs-api" name="service" value="nestjs-api">
                        <label for="nestjs-api">NestJS API</label>
                      </div>
                      <div>
                        <input type="checkbox" id="vue-frontend" name="service" value="vue-frontend">
                        <label for="vue-frontend">Vue.js Frontend</label>
                      </div>
                      <div>
                        <input type="checkbox" id="prestashop" name="service" value="prestashop">
                        <label for="prestashop">PrestaShop</label>
                      </div>
                      <div>
                        <input type="checkbox" id="mysql" name="service" value="mysql">
                        <label for="mysql">MySQL</label>
                      </div>
                      <div>
                        <input type="checkbox" id="redis" name="service" value="redis">
                        <label for="redis">Redis</label>
                      </div>
                      <button type="submit">Next</button>
                    </form>`
                  });
                }
                else if (currentStep === 3) {
                  await github.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: context.issue.number,
                    body: `## üöÄ Environment Setup Bot

                    Current Step: 2/3 - Duration Selection

                    ### How long should this environment exist?
                    <form>
                      <div>
                        <input type="radio" id="1h" name="ttl" value="1h">
                        <label for="1h">1 hour (1h)</label>
                      </div>
                      <div>
                        <input type="radio" id="24h" name="ttl" value="24h">
                        <label for="24h">24 hours (24h)</label>
                      </div>
                      <div>
                        <input type="radio" id="7d" name="ttl" value="7d">
                        <label for="7d">7 days (7d)</label>
                      </div>
                      <div>
                        <input type="radio" id="30d" name="ttl" value="30d">
                        <label for="30d">30 days (30d)</label>
                      </div>
                      <button type="submit">Next</button>
                      <button type="button" onclick="history.back()">Back</button>
                    </form>`
                  });
                }
              }
              else if (command.toLowerCase() === 'cancel') {
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  body: `## ‚ùå Environment Creation Cancelled

                  The environment creation process has been cancelled. You can start over by typing \`/create-env\`.`
                });
              }
            }
