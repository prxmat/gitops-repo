name: Create Test Environment

on:
  workflow_dispatch:
    inputs:
      project:
        description: 'Project name'
        required: true
        type: string
      user:
        description: 'User requesting the environment'
        required: true
        type: string
      ttl_hours:
        description: 'Time to live in hours'
        required: true
        type: number
        default: 24
      image_tag:
        description: 'Docker image tag to deploy'
        required: true
        type: string
      app_type:
        description: 'Type of application to deploy'
        required: true
        type: choice
        options:
          - prestashop
          - wordpress
          - drupal
          - custom-service

jobs:
  validate-inputs:
    runs-on: ubuntu-latest
    steps:
      - name: Validate TTL
        run: |
          if [ ${{ inputs.ttl_hours }} -gt 72 ]; then
            echo "Error: TTL cannot exceed 72 hours"
            exit 1
          fi
      
      - name: Validate image tag format
        run: |
          if ! [[ ${{ inputs.image_tag }} =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Image tag must follow format vMAJOR.MINOR.PATCH"
            exit 1
          fi
      
      - name: Check user environment limit
        run: |
          ENV_COUNT=$(find values/${{ inputs.project }} -name "test-${{ inputs.user }}-*.yaml" | wc -l)
          if [ $ENV_COUNT -ge 3 ]; then
            echo "Error: User has reached maximum environment limit (3)"
            exit 1
          fi

  create-test-env:
    needs: validate-inputs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Generate timestamp
        id: timestamp
        run: echo "timestamp=$(date +%Y%m%d%H%M%S)" >> $GITHUB_OUTPUT
      
      - name: Create values directory if it doesn't exist
        run: |
          mkdir -p values/${{ inputs.project }}
      
      - name: Generate values file
        run: |
          # Base configuration
          cat > values/${{ inputs.project }}/test-${{ inputs.user }}-${{ steps.timestamp.outputs.timestamp }}.yaml << EOF
          image:
            repository: your-registry/${{ inputs.project }}
            tag: ${{ inputs.image_tag }}
          replicaCount: 1
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          ttl: ${{ inputs.ttl_hours }}h
          EOF
          
          # Add application-specific configuration
          case ${{ inputs.app_type }} in
            "prestashop")
              cat >> values/${{ inputs.project }}/test-${{ inputs.user }}-${{ steps.timestamp.outputs.timestamp }}.yaml << EOF
              prestashop:
                version: "8.x"
                db:
                  host: mysql
                  name: prestashop
                  user: prestashop
                redis:
                  host: redis
                  port: 6379
              EOF
              ;;
            "wordpress")
              cat >> values/${{ inputs.project }}/test-${{ inputs.user }}-${{ steps.timestamp.outputs.timestamp }}.yaml << EOF
              wordpress:
                version: "latest"
                db:
                  host: mysql
                  name: wordpress
                  user: wordpress
                plugins:
                  - woocommerce
                  - yoast-seo
              EOF
              ;;
            "drupal")
              cat >> values/${{ inputs.project }}/test-${{ inputs.user }}-${{ steps.timestamp.outputs.timestamp }}.yaml << EOF
              drupal:
                version: "10.x"
                db:
                  host: mysql
                  name: drupal
                  user: drupal
                modules:
                  - views
                  - pathauto
                  - token
              EOF
              ;;
            "custom-service")
              cat >> values/${{ inputs.project }}/test-${{ inputs.user }}-${{ steps.timestamp.outputs.timestamp }}.yaml << EOF
              custom:
                env:
                  - name: NODE_ENV
                    value: development
                  - name: DEBUG
                    value: "true"
              EOF
              ;;
          esac
      
      - name: Configure Git
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions@github.com'
      
      - name: Commit and push changes
        run: |
          git add values/${{ inputs.project }}/test-${{ inputs.user }}-${{ steps.timestamp.outputs.timestamp }}.yaml
          git commit -m "Create test environment for ${{ inputs.project }} by ${{ inputs.user }}"
          git push
      
      - name: Create cleanup job
        run: |
          # Schedule cleanup job for TTL expiration
          CLEANUP_TIME=$(date -d "+${{ inputs.ttl_hours }} hours" +%s)
          echo "CLEANUP_TIME=$CLEANUP_TIME" >> $GITHUB_ENV
          echo "Schedule cleanup job for $(date -d @$CLEANUP_TIME)"
      
      - name: Notify on completion
        run: |
          echo "Test environment created successfully!"
          echo "Environment will be available in namespace: test-${{ inputs.project }}-${{ inputs.user }}"
          echo "TTL: ${{ inputs.ttl_hours }} hours"
          echo "Application Type: ${{ inputs.app_type }}"
          echo "Cleanup scheduled for: $(date -d @$CLEANUP_TIME)" 